package com.user.service;

import java.util.HashSet;
import java.util.Set;
import java.util.stream.Collectors;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.user.entity.Role;
import com.user.entity.User;
import com.user.repo.IUserRepo;

@Service
public class UserDetailsServiceImpl implements IUserDetailsService{
    @Autowired
    private IUserRepo userRepository;

    public UserDetailsServiceImpl(IUserRepo userRepository) {
        this.userRepository = userRepository;   
}

@Override
public UserDetails loadUserByUsername(String usernameOrEmail) throws UsernameNotFoundException {
      User user = userRepository.findByUsernameOrEmail(usernameOrEmail, usernameOrEmail)
             .orElseThrow(() ->
                     new UsernameNotFoundException("User not found with username or email: "+ usernameOrEmail));

    Set<GrantedAuthority> authorities = user
            .getRoles()
            .stream()
            .map((role) -> new SimpleGrantedAuthority(role.getName())).collect(Collectors.toSet());

    return new org.springframework.security.core.userdetails.User(user.getEmailId(),
            user.getPassword(),
            authorities);
}
}