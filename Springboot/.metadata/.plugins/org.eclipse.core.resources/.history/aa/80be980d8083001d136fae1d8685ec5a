package com.digitalbook.controller.user;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.digitalbook.entity.user.Book;
import com.digitalbook.entity.user.User;
import com.digitalbook.service.IUserDetailsService;

@RestController
@RequestMapping("/api/v1/digitalbooks")
public class UserController {
	@Autowired
	private RestTemplate restTemplate;
	
	@Autowired
	private IUserDetailsService  userDetailsService;

    @GetMapping("/sign/{id}")
    public Integer authenticateUser1(@PathVariable Integer id){
     
        return id;
    }
    
    @PostMapping("/sign-in")
    public ResponseEntity<String> authenticateUser(@RequestBody User user){
       
    	String message=userDetailsService.userSignIn(user);
        return new ResponseEntity<>(message, HttpStatus.OK);
    }
    @PostMapping("/sign-up")
    public ResponseEntity<?> registerUser(@RequestBody User user){
    
    String message=userDetailsService.userSignUp(user);
    if(message.equals("Username is already taken!")){
        return new ResponseEntity<>(message, HttpStatus.BAD_REQUEST);
    }

    // add check for email exists in DB
    if(message.equals("Email is already taken!")){
        return new ResponseEntity<>(message, HttpStatus.BAD_REQUEST);
    }
    
    return new ResponseEntity<>("User registered successfully", HttpStatus.OK);
    
    }
    
//    @GetMapping("/logout")
//      public String logoutPage(HttpServletRequest request, HttpServletResponse response) {  
//        Authentication auth = SecurityContextHolder.getContext().getAuthentication();  
//        if (auth != null){      
//           new SecurityContextLogoutHandler().logout(request, response, auth);  
//        }  
//         return "redirect:/";  
//     }
    
    //-----Author can create a book------
    @PostMapping("/author/{authorid}/books")
    Integer authorCreateBook(@PathVariable Integer authorid ,@RequestBody Book bookdata) {
    	//Book bookdata =(Book) user.getBook();
       String accessType=userDetailsService.accessRightCheck(authorid);
    
    	return this.restTemplate.getForObject("http://BOOK-SERVICE/addnewbook/"+bookdata,Integer.class);
    }
    
    @PutMapping("/author/{authorid}/books/{bookid}")
    Integer authorupdateBookBook(@RequestBody Book bookdata) {
    	//Book bookdata =(Book) user.getBook();
    	return this.restTemplate.getForObject("http://BOOK-SERVICE/addnewbook/"+bookdata,Integer.class);
    }
}